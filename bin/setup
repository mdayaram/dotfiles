#!/usr/bin/env bash

function backup {
	[ ! -d "$dotfile_root/backups" ] && mkdir -p "$dotfile_root/backups"
	if [ -n "$1" -a ! -h "$1" ]; then
		echo "  Found existing $1 file, backing up to $dotfile_root/backups..."
		mv "$1" "$dotfile_root/backups"
	else
		rm "$1"
	fi
}

dotfile_root="${BASH_SOURCE[0]}"
if [ -z $dotfile_root ]; then
	echo "Couldn't determine home dir of dotfiles"
	exit 1
fi
dotfile_root=`dirname $dotfile_root`
dotfile_root=$(cd $dotfile_root;pwd)
dotfile_root=`dirname $dotfile_root`
echo "Determined DOTFILE root: $dotfile_root"

if [ `uname` == "Linux" ]; then
	backup "$HOME/.bashrc"
	ln -sf $dotfile_root/bashrc $HOME/.bashrc
elif [ `uname` == "Darwin" ]; then
	backup "$HOME/.bash_profile"
	ln -sf $dotfile_root/bashrc $HOME/.bash_profile
fi

backup "$HOME/.vim"
backup "$HOME/.vimrc"
backup "$HOME/.gitconfig"
backup "$HOME/.ackrc"
ln -sf $dotfile_root/vim $HOME/.vim
ln -sf $dotfile_root/vimrc $HOME/.vimrc
ln -sf $dotfile_root/gitconfig $HOME/.gitconfig
ln -sf $dotfile_root/ackrc $HOME/.ackrc

# .ssh/config file could have some crazy/complicated logic in there, only make
# a link if it doesn't already exist.
if [ ! -f "$HOME/.ssh/config" ]; then
	mkdir -p $HOME/.ssh/sessions
	ln -sf $dotfile_root/ssh/config $HOME/.ssh/config
fi

# Needed for VIM
mkdir -p ~/.vim/bundle
mkdir -p ~/.vim/tmp/backup
mkdir -p ~/.vim/tmp/undo
mkdir -p ~/.vim/tmp/swap

# Install Vundle for vim
if [ -d "$HOME/.vim/bundle/Vundle.vim" ]; then
	cd "$HOME/.vim/bundle/Vundle.vim"
	git pull
	cd -
else
	git clone https://github.com/gmarik/Vundle.vim.git "$HOME/.vim/bundle/Vundle.vim"
fi

# Setup vundles for vim
vim +PluginClean! +qall
vim +PluginInstall! +qall

echo "donezo!"
